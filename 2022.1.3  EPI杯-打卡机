#include "reg52.h"
#include <string.h>
#define shuma P0
#define KEY1_PRESS	1
#define KEY2_PRESS	2
#define KEY3_PRESS	3
#define KEY4_PRESS	4
#define KEY5_PRESS	5
#define KEY_UNPRESS	0	
typedef unsigned int u16;
typedef unsigned char u8;
sbit LED1=P1^0;
sbit LED2=P1^1;
sbit LED3=P1^2;
sbit LED4=P1^3;
sbit LED5=P1^4;
sbit LED6=P1^5;
sbit KEY1=P2^0;
sbit KEY2=P2^1;
sbit KEY3=P2^2;
sbit KEY4=P2^3;
sbit KEY5=P2^4;
u16 key_time;
u16 T0count=0; 
u8 flag1=0;
u8 state_=1;
u8 key=0;
u8 num=33;
u8 num1=33;
u8 yonghu=0;
u8 WEICI=0;
u16 count=0;
u8 i=0;
u8 EA_FLAG=0;

u8 smg_code[]={0X81,0XB7,0XC2,0XA2,0XB4,0XA8,0X88,0XB3,0X80,0XA0,0X10,0X00,0X49,0X01,0X48,0X58};

void delay(u16 ten_us)
{
   while(ten_us--);
}

struct bb
{
   u8 bianhao;
	 u8 xinxima[4];
	 u8 weici;
}s[16]={0,"3333",0,1,"0110",0,2,"3333",0,3,"3333",0,4,"3333",0,5,"1010",0,6,"3333",0,7,"3333",0,8,"3333",0,9,"0011",0,10,"3333",0,11,"3333",0,12,"0001",0,13,"3333",0,14,"3333",0,15,"3333",0,};

void time0_init(void)
{

	TMOD &= 0xF0;		
	TMOD |= 0x01;	
	TL0 = 0X57;		
	TH0 = 0x9e;		
	TF0 = 0;		
	TR0 = 1;		
	ET0=1;
	EA=1;
	PT0=0;

}
void time0() interrupt 1
{
	TH0=0x9e;
	TL0=0x57;//50ms
	key_time++; 
	count++;
	if(EA_FLAG==1)
	{
		if(count==10)
		{
			count=0;
			LED5=!LED5;
		}
  }
}

u8 scan_key(Key)  
{
static unsigned char key_state=0;                           
static unsigned char state=0;
static unsigned char time,time1,time2;    
static unsigned char key_up_flag=0;                         
unsigned char key_return=0;


  if(Key==0)                                                
  { 
    delay(1600);
     if(Key==0)
     { 
       key_state=0;
     } 
   }  
  else 
  {
    delay(1600);                                              
    if(Key==1)
    {
     key_state=1;
     key_up_flag=0;
    }
  }
   if((state==0)&&(key_state==0)&&(key_up_flag==0))                                     
    {
             state=1;
             time=key_time;                                      
    }
				 
		    if(state==1)
				 {
							time1=key_time;
							time2=time1-time;                                 
										
							 if(time2>50)                                    
								 {
									state=2;
								} 
						 if(key_state==1)                               
							 {
									state=3;
									time=key_time;                                
							 }
				 }
				 
				 if(state==2)                                        
					{
								state=0;                              
								key_up_flag=1;
								key_return=3;
					}
         
				 if((state==3)&&(key_up_flag==0))
          {
               time1=key_time;
               time2=time1-time;                         
                if(time2>6)                                //??????????,??300ms,??????
                    {
                      state=0;
                    key_return=1;
                  }    
              else    if(key_state==0)                     //?????,300ms???????
                 {
                      state=4;
                 }
           }
           
				 if(state==4)
          {
                  if(key_state==1)                        
                  {
                     state=0;
                    key_return=2;
                   }
          }
          
     return key_return;          
}

u8 key_scan(u8 mode)
{
	static u8 key=1;

	if(mode)key=1;//连续扫描按键
	if(key==1&&(KEY1==0||KEY2==0||KEY3==0||KEY4==0))//任意按键按下
	{
		delay(1000);//消抖
		key=0;
		if(KEY1==0)
			return KEY1_PRESS;
		else if(KEY2==0)
			return KEY2_PRESS;
		else if(KEY3==0)
			return KEY3_PRESS;
		else if(KEY4==0)
			return KEY4_PRESS;	
	}
	else if(KEY1==1&&KEY2==1&&KEY3==1&&KEY4==1)	//无按键按下
	{
		key=1;			
	}
	return KEY_UNPRESS;		
}


void main()
{
	 LED1=LED2=LED3=LED4=LED5=LED6=0;
	 delay(56000);
	 LED1=LED2=LED3=LED4=LED5=LED6=1;
	 delay(56000);
	 LED1=LED2=LED3=LED4=LED5=LED6=0;
	 delay(56000);
	 LED1=LED2=LED3=LED4=LED5=LED6=1;
	 delay(56000);
	 time0_init();
   while(1)
	 {
	   num = key_scan(1);
		 num1 = scan_key(KEY5);
		 		{//改变输入灯亮灭情况
				   if(num==1&&LED1==1)
						 LED1=0;
					 if(num==1&&LED1==0)
						 LED1=1;
					 
					 if(num==2&&LED2==1)
						 LED2=0;
					 if(num==2&&LED2==0)
						 LED2=1;
					 
					 if(num==3&&LED3==1)
						 LED3=0;
					 if(num==3&&LED3==0)
						 LED3=1;
					 
					 if(num==4&&LED4==1)
						 LED4=0;
					 if(num==4&&LED4==0)
						 LED4=1;
				 }
		 switch(state_)
		 {
			  
			 case 1://主界面
			 {
				 LED6=0;
				 shuma = 0x01;//待机
				 if(num1==1)
					 {
				     state_=2;
             for( i=0;i<16;i++)
						 {
						   s[i].weici=0;
						 }
						 WEICI=0;
						 LED1=LED2=LED3=LED4=1;
						 break;
				   }
				 if(num1==3)
				 {
					   state_=3;
					   EA_FLAG=1;
					   LED1=LED2=LED3=LED4=LED6=1;
					   yonghu=33;
					  
 				 }
				 if(num1==2)
				 {
				   state_=4;
					 LED5=LED6=0;
					 yonghu=33;		 
				 }
			 }
			 case 2://打卡模式
			 {
				    
			    	
    				 LED6=1;
						 LED5=0;
				 
				 {//用户识别赋值
				    for( i=0;i<16;i++)
					 {
					   if(LED1==s[i].xinxima[0]-48)
							 if(LED2==s[i].xinxima[1]-48)
								 if(LED3==s[i].xinxima[2]-48)
									 if(LED4==s[i].xinxima[3]-48)
										 yonghu=i;
					 }}
					 
			     {//数码管对应显示编号，指示灯亮
							if(strcmp(s[yonghu].xinxima,"3333")!=0)
							 {	 
								shuma=~smg_code[yonghu];
								 if(s[yonghu].weici!=0)
									 LED6=0;
								 else
									 LED6=1;
							 }
							else 
							 {
								 shuma=0x01;;
								 LED6=1;
							 }
				 }
			   {//记录位次
					 if(num==5&&(strcmp(s[yonghu].xinxima,"3333")!=0))
					 {
					   if(LED6==1)
						 {
						   s[yonghu].weici=++WEICI;
						 }
						 LED6=0;
					 }
			   } 
			 
			  if(num1==2)
				{
				  state_=1;
					LED1=LED2=LED3=LED4=LED5=1;
					yonghu=0;
					break;
				}
			}
			 case 3://录入模式
			 {    
					{//用户识别赋值
				    for( i=0;i<16;i++)
					 {
					   if(LED1==s[i].xinxima[0]-48)
							 if(LED2==s[i].xinxima[1]-48)
								 if(LED3==s[i].xinxima[2]-48)
									 if(LED4==s[i].xinxima[3]-48)
										 yonghu=i;
					 }}
					if(yonghu>15)
					{
						if(num==5)
						{
							 for(i=0;i<16;i++)
							{
						     if(strcmp(s[i].xinxima,"3333")==0)
								 {
								   s[i].xinxima[0]=LED1;
									 s[i].xinxima[1]=LED2;
									 s[i].xinxima[2]=LED3;
									 s[i].xinxima[3]=LED4;
									  shuma=~smg_code[i];
									 LED6=0;
								 }
							 }
						 }
					 }
				 else
				 {
					 LED6=0;
				 }
         if(yonghu>15)
					 LED6=0;
				 if(num1==3)
				 {
				    state_=1;
					  EA_FLAG=0;
					  LED1=LED2=LED3=LED4=LED5=1;
				 }
			 }			 
			 case 4://查询模式
			 {
			    {//用户识别赋值
				    for( i=0;i<16;i++)
					 {
					   if(LED1==s[i].xinxima[0]-48)
							 if(LED2==s[i].xinxima[1]-48)
								 if(LED3==s[i].xinxima[2]-48)
									 if(LED4==s[i].xinxima[3]-48)
										 yonghu=i;
					 }}
					if(yonghu==33)
						shuma=0x01;
					else if(yonghu<16)
						if(s[yonghu].weici==0)
							shuma=~0xEA;
						else
							shuma=~smg_code[s[yonghu].weici];
			 
			    if(num1==2)
					{
					  state_=1;
						LED1=LED2=LED3=LED4=LED5=1;
					}
			 
			 }				 

			}
	    }
}
	 
